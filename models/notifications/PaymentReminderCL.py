class PaymentReminder(NotificationBase):
    async def filter_users_with_unpaid_access(self, batch: List[int]) -> List[int]:
        blocked_users = []

        async def check_user(chat_id: int):
            try:
                user = await UserCl.load_user(chat_id)
                if not user or not user.servers:
                    return None

                for server in user.servers:
                    date_key_off = await server.date_key_off.get()
                    has_paid_key = await server.has_paid_key.get()

                    if await is_trial_ended(date_key_off) and has_paid_key == 0:
                        return chat_id
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}: {e}")
                return None

        results = await asyncio.gather(*(check_user(chat_id) for chat_id in batch))
        blocked_users = [chat_id for chat_id in results if chat_id is not None]
        return blocked_users

    async def fetch_target_users(self) -> List[int]:
        """
        –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —É –∫–æ—Ç–æ—Ä—ã—Ö –∑–∞–≤–µ—Ä—à—ë–Ω –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ–ø–ª–∞—Ç–∞.
        """
        all_users = await UserCl.get_all_users()
        blocked_users = []
        for batch in self.split_into_batches(all_users):
            blocked_users.extend(await self.filter_users_with_unpaid_access(batch))
        return blocked_users

    def get_message_template(self) -> str:
        return (
            "‚ùå <b>–í–∞—à –¥–æ—Å—Ç—É–ø –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω</b>.\n\n"
            "–ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –∑–∞–≤–µ—Ä—à—ë–Ω. –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è VPN, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É:\n\n"
            "üí≥ <b>–û–ø–ª–∞—Ç–∏—Ç–µ –¥–æ—Å—Ç—É–ø</b> –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π."
        )

    def get_keyboard(self) -> InlineKeyboardMarkup:
        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –¥–æ—Å—Ç—É–ø", callback_data="buy_vpn")],
                [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
            ]
        )
        return keyboard

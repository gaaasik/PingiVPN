import logging

from .base_processor import BaseResultProcessor
from bot.handlers.admin import send_admin_log
from bot_instance import bot
from models.UserCl import UserCl

logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")


class ResultChangeEnable(BaseResultProcessor):
    async def process(self, task_data: dict):
        chat_id = task_data.get('chat_id')
        enable_status = task_data.get('enable')
        status_task = task_data.get('status')
        protocol = task_data.get('protocol')
        us = await UserCl.load_user(chat_id)
        uuid_id = None
        user_ip = None
        if protocol == "vless":
            uuid_id = task_data.get('uuid_value')
        elif protocol == "wireguard":
            user_ip = task_data.get('user_ip')

        if not us:
            logging.error(f"–û—à–∏–±–∫–∞ —É enable –≤ result_change_enable. –û—Ç chat_id = {chat_id}")
            await send_admin_log(bot,
                                 f"üòà‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –ù–ï –∏–∑–º–µ–Ω–∏–ª —Å–æ—Å—Ç–æ—è–Ω–∏–µ status={status_task}")
            return

        identifier = None
        if protocol == "vless":
            identifier = task_data.get('uuid_value')
        elif protocol == "wireguard":
            identifier = task_data.get('user_ip')

        if identifier:
            await self.update_enable_status(us, identifier, enable_status, protocol)

        logging.info(f"–ü–æ–ª—É—á–µ–Ω–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –∑–∞–¥–∞—á–∞ result_change_enable. –û—Ç chat_id = {chat_id}")
        await send_admin_log(bot,
                             f"üòà –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∏–∑–º–µ–Ω–∏–ª —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ {enable_status} (–≤ db:{await us.active_server.enable.get()}), status={status_task}")

    async def update_enable_status(self, us: UserCl, identifier: str, enable_status: bool, protocol: str):
        """
        –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è enable_status –¥–ª—è VLESS –∏ WireGuard.
        """

        current_identifier = await us.active_server.uuid_id.get() if protocol == "vless" else await us.active_server.user_ip.get()

        if current_identifier == identifier:
            await us.active_server.enable.set_enable_admin(enable_status)
            logging.info(f"–£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω enable –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫–ª—é—á–∞ {identifier}")
        else:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º history_key_list
            for key in us.history_key_list:
                key_identifier = await key.uuid_id.get() if protocol == "vless" else await key.user_ip.get()
                if key_identifier == identifier:
                    await key.enable.set_enable_admin(enable_status)
                    logging.info(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω –∫–ª—é—á –≤ history_key_list: {identifier}, enable={enable_status}")
                    return

            logging.error(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä {identifier} –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –≤ active_server, –Ω–∏ –≤ history_key_list")
            await send_admin_log(f"‚ö†Ô∏èüòà –û—à–∏–±–∫–∞: –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä {identifier} –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –≤ active_server, –Ω–∏ –≤ history_key_list chat_id={us.chat_id}")


        # if us:
        #     if await us.active_server.name_protocol.get() == "vless":
        #         now_uuid_id = await us.active_server.uuid_id.get()
        #         if now_uuid_id == uuid_id:
        #             await us.active_server.enable.set_enable_admin(enable_status)
        #         else:
        #             logging.error(
        #                 f"–æ–±—Ä–∞–±–æ—Ç–∫–∞ result_change_enable: –ø—Ä–∏—à–µ–ª –æ—Ç–≤–µ—Ç —Å uuid_value = {uuid_id}, –∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å chat_id = {chat_id} —Å–µ–π—á–∞—Å uuid_id = {now_uuid_id}")
        #             return
        #     elif await us.active_server.name_protocol.get() == "wireguard":
        #         now_user_ip = await us.active_server.user_ip.get()
        #         if now_user_ip == user_ip:
        #             await us.active_server.enable.set_enable_admin(enable_status)
        #         else:
        #             logging.error(
        #                 f"–æ–±—Ä–∞–±–æ—Ç–∫–∞ result_change_enable: –ø—Ä–∏—à–µ–ª –æ—Ç–≤–µ—Ç —Å user_ip = {user_ip}, –∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å chat_id = {chat_id} —Å–µ–π—á–∞—Å user_ip = {now_user_ip}")
        #             return
        #
        #     logging.info(f"–ü–æ–ª—É—á–µ–Ω–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –∑–∞–¥–∞—á–∞ result_change_enable. –û—Ç chat_id = {chat_id}")
        #     await send_admin_log(bot,
        #                          f"üòà–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∏–∑–º–µ–Ω–∏–ª —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ {enable_status} (–≤ db:{await us.active_server.enable.get()}), status={status_task}")
        #
        # else:
        #     logging.error(f"–û—à–∏–±–∫–∞ —É enable –≤ result_change_enable. –û—Ç chat_id = {chat_id}")
        #     await send_admin_log(bot,
        #                          f"üòà‚ùå–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –ù–ï –∏–∑–º–µ–Ω–∏–ª —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —Å–µ–π—á–∞—Å {await us.active_server.enable.get()}, –∞ –ø—Ä–∏—à–ª–æ enable=NONE status={status_task}")
        #




        # if us and enable_status is not None:    result_change_enable_user
        #     await us.active_server.enable.set_enable_admin(enable_status)
        #     logging.info(f"–ü–æ–ª—É—á–µ–Ω–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –∑–∞–¥–∞—á–∞ result_change_enable. –û—Ç chat_id = {chat_id}")
        #     await send_admin_log(bot, f"üòà–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∏–∑–º–µ–Ω–∏–ª —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ {enable_status} (–≤ db:{await us.active_server.enable.get()}), status={status_task}")
        #
        # else:
        #     logging.error(f"–û—à–∏–±–∫–∞ —É enable –≤ result_change_enable. –û—Ç chat_id = {chat_id}")
        #     await send_admin_log(bot,
        #                          f"üòà‚ùå–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –ù–ï –∏–∑–º–µ–Ω–∏–ª —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —Å–µ–π—á–∞—Å {await us.active_server.enable.get()}, –∞ –ø—Ä–∏—à–ª–æ enable=NONE status={status_task}")
        #
        #


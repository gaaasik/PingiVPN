
# bot/handlers/show_qr.py
from aiogram import Router, types, Bot
from aiogram.filters import Command
from aiogram.types import CallbackQuery


from bot.handlers.cleanup import store_message, delete_unimportant_messages, store_important_message

import os

from models.UserCl import UserCl

router = Router()



@router.callback_query(lambda c: c.data == "my_keys")
async def handle_buy_vpn(callback_query: CallbackQuery):
    chat_id = callback_query.message.chat.id
    us = await UserCl.load_user(chat_id)
    text_count = "0 –∫–ª—é—á–µ–π"
    text_key_name = ""
    text_country_key = ""
    text_status = ""
    text_day_activ = ""
    text_traffic = "–¢—Ä–∞—Ñ–∏–∫: 200Gb –≤/–º–µ—Å"
    text_url = ""

    if await us.count_key.get() > 0:
        text_count = "1 –∫–ª—é—á"
        text_key_name = await us.servers[0].name_key_for_user.get()
        text_country_key = await us.servers[0].country_server.get()
        text_status = us.servers[0].status_key.get()
        text_url = us.servers[0].url_vless
        if us.servers[0].status_key.get() == "free_key":
            text_status = "–ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥"
            text_day_activ = f"–ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –∞–∫—Ç–∏–≤–µ–Ω –¥–æ: {us.servers[0].date_key_off.get_date()}\n\n"
        elif us.servers[0].status_key.get() == "activ":
            text_status = "–∫–ª—é—á –∞–∫—Ç–∏–≤–µ–Ω"
            text_day_activ = f"–ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –∞–∫—Ç–∏–≤–µ–Ω –¥–æ: {us.servers[0].date_key_off.get_date()}\n\n"
        else:
            text_status = "–æ–∂–∏–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞"
            text_day_activ = "–î–ª—è —Ä–∞–±–æ—Ç—ã –∫–ª—é—á–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ–ø–ª–∞—Ç–∞"

    else:
        text_count = "0 –∫–ª—é—á–µ–π"




    text = (
        f"–£ –≤–∞—Å –µ—Å—Ç—å: {text_count}\n"
        f"–í–∞—à –∫–ª—é—á: {text_key_name}\n"
        f"–°—Ç—Ä–∞–Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞: {text_country_key}\n"
        f"C—Ç–∞—Ç—É—Å: {text_status}\n"
        f"{text_day_activ}\n"
        f"{text_traffic}\n"
        f"```\n{text_url}\n```"
        "–ü—Ä–∏ –æ–ø–ª–∞—Ç–µ –≤—ã –ø—Ä–æ–¥–ª–∏—Ç–µ —Å—Ä–æ–∫ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫–ª—é—á–∞ –µ—â–µ –Ω–∞ *30 –¥–Ω–µ–π*"

    )


    await callback_query.message.answer(text, reply_markup=keyboard, parse_mode="Markdown")
    await callback_query.answer()






async def show_menu_my_key(chat_id: int, bot: Bot, status: str, days_since_registration: int):
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –ø–æ chat_id
    user = await bot.get_chat(chat_id)
    user_name = f"{user.first_name} {user.last_name or ''}".strip()

    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    text = (
        f"–ü—Ä–∏–≤–µ—Ç {user_name}! üï∂\n\n"
        "PingiVPN - –±—ã—Å—Ç—Ä—ã–π –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Å–≤–æ–±–æ–¥–Ω–æ–º—É –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π\n\n"
        "üì± –î–æ—Å—Ç—É–ø –∫ –ª—é–±—ã–º —Å–æ—Ü–∏–∞–ª—å–Ω—ã–º —Å–µ—Ç—è–º\n"
        "üõ° –ê–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å\n"
        "üì∂ –£—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –∫ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞–º\n"
        "üöÄ –í—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å\n"
        "üíª –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ª—é–±—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤\n\n"
        f"üîë –°—Ç–∞—Ç—É—Å: {status}\n"
        f"üïì –í—ã —Å –Ω–∞–º–∏ —É–∂–µ {days_since_registration} –¥–Ω–µ–π! ü•≥\n"
    )
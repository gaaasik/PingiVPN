# bot/handlers/help_menu.py
import logging

from aiogram import Router, types, Bot, F
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.filters import Command
from telebot.formatting import escape_markdown

from bot.handlers.admin import ADMIN_CHAT_IDS
from models.UserCl import UserCl

router = Router()

# –¢–µ–∫—Å—Ç –¥–ª—è –ø–æ–º–æ—â–∏
help_text_message = (
    f"üìö *–ü–æ–º–æ—â—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞*\n"
    f"{escape_markdown('–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º @pingi_help –∏ –º—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–∞–º –ø–æ–º–æ–∂–µ–º –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–º:')}"
)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –≤–æ–ø—Ä–æ—Å–æ–≤
def help_options_keyboard():
    buttons = [
        [
            InlineKeyboardButton(
                text="üí¨ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å",
                url="https://t.me/pingi_help"  # –°—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç —Å –∞–¥–º–∏–Ω–∞–º–∏
            ),
        ],
        [
            InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã "/support" –∏ –∫–Ω–æ–ø–∫–∏ "help"
@router.message(Command("support"))
@router.callback_query(F.data == "help")
async def handle_support(event: types.Message | types.CallbackQuery):
    ################################### TEST TOL ######################################################## –ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –æ—á–µ—Ä–µ–¥—å
    chat_id = event.message.chat.id
    us = await UserCl.load_user(chat_id)
    print("tolsemenov MENU_MY_KEYS ", chat_id)
    if chat_id in ADMIN_CHAT_IDS:
        us = await UserCl.load_user(chat_id)
        await us.update_key_to_vless()
        # if us.active_server:
        #     print("server_ip = ", await us.active_server.server_ip.get())
        #     for key in us.history_key_list:
        #         key_identifier = await key.uuid_id.get()
        #         if key_identifier == "85ff45f9-c56b-4708-856f-4f778bdf2c3c":
        #             print("country_server ", await key.country_server.get())
        #             print("date_key_off ", await key.date_key_off.get())
        #             print("enable ", await key.enable.get())
        #             print("email_key ", await key.email_key.get())
        #             print("server_ip ", await key.server_ip.get())
        #             await key.enable.set_enable_admin(False)
        #             logging.info(f"TESt_TOL: {key_identifier}, enable=False")
        #             return


    ################################### TEST TOL ######################################################## —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ –∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.

    if isinstance(event, types.Message):
        await event.answer(help_text_message, reply_markup=help_options_keyboard(), parse_mode="Markdown")
    elif isinstance(event, types.CallbackQuery):
        await event.message.edit_text(help_text_message, reply_markup=help_options_keyboard(), parse_mode="Markdown")
        await event.answer()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º callback_query
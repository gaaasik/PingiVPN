# bot/handlers/help_menu.py


from aiogram import Router, types, Bot, F
from aiogram.types import CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.filters import Command
router = Router()

# –¢–µ–∫—Å—Ç –¥–ª—è –ø–æ–º–æ—â–∏
help_text_message = (
    f"üìö *–ü–æ–º–æ—â—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞*\n"
    "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –∏ –º—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–∞–º –ø–æ–º–æ–∂–µ–º –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–º:"
)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –≤–æ–ø—Ä–æ—Å–æ–≤
def help_options_keyboard():
    buttons = [
        # [
        #     InlineKeyboardButton(text="üöÄ –ö–∞–∫ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ VPN?", callback_data="help_connect_vpn"),
        # ],
        # [
        #     InlineKeyboardButton(text="üõ†Ô∏è –ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ VPN –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç?", callback_data="help_vpn_not_working"),
        # ],
        [
            InlineKeyboardButton(text="üí¨ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", callback_data="help_ask_question"),
        ],
        [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã "/support" –∏ –∫–Ω–æ–ø–∫–∏ "help"
@router.message(Command("support"))
@router.callback_query(F.data == "help")
async def handle_support(event: types.Message | types.CallbackQuery):
    if isinstance(event, types.Message):
        await event.answer(help_text_message, reply_markup=help_options_keyboard(), parse_mode="Markdown")
    elif isinstance(event, types.CallbackQuery):
        await event.message.edit_text(help_text_message, reply_markup=help_options_keyboard(), parse_mode="Markdown")
        await event.answer()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º callback_query
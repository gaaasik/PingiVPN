# bot/handlers/share.py
from aiogram import Router, types
from aiogram.filters import Command
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from bot.handlers.cleanup import delete_unimportant_messages, store_message, messages_for_db, register_message_type
import os

name_bot = os.getenv('name_bot')
router = Router()



@router.message(Command("share"))
@router.message(lambda message: message.text == "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å –¥—Ä—É–≥–æ–º!")
async def cmd_share(message: types.Message):

    chat_id = message.chat.id
    user_id = message.from_user.id
    bot = message.bot
    share_message = (
        f"–¢–≤–æ–π –¥—Ä—É–≥ —Ç–æ–∂–µ –∑–∞—Å–ª—É–∂–∏–≤–∞–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç! \n"
        f"\n–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –¥–ª—è –¥—Ä—É–≥–∞: {chat_id} "
        f"\n*–ü–µ—Ä–µ—à–ª–∏ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ* –∏ –ø–æ–º–æ–≥–∏ –µ–º—É –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –Ω–∞—à–µ–º—É VPN-—Å–µ—Ä–≤–∏—Å—É. üåêüîíüöÄ"
        f"\n14 –¥–Ω–µ–π –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –¥—Ä—É–≥—É –∏ 3 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –¥–Ω—è —Ç–µ–±–µ "


    )
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    await store_message(chat_id, message.message_id, message.text, 'user')

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
    referral_link = f"https://t.me/{name_bot}?start={user_id}"  # –ó–∞–º–µ–Ω–∏—Ç–µ 'YourBot' –Ω–∞ username –≤–∞—à–µ–≥–æ –±–æ—Ç–∞

    # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫—É —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π
    share_link_button = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å –¥—Ä—É–≥–æ–º", url=referral_link)]
        ]
    )

    # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Å—Ç–∞—Ä—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ç–µ–º –∂–µ —Ç–µ–∫—Å—Ç–æ–º
    for msg in messages_for_db:
        if msg['chat_id'] == chat_id and msg['message_text'] == share_message:
            try:
                await bot.delete_message(chat_id, msg['message_id'])
            except Exception as e:
                print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {msg['message_id']}: {e}")

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–æ–π
    sent_message = await message.answer(share_message, reply_markup=share_link_button, parse_mode="Markdown")

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –º–∞–ø–ø–∏–Ω–≥–∞, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –µ–≥–æ —É–¥–∞–ª—è—Ç—å
    if sent_message:
        await store_message(chat_id, sent_message.message_id, share_message, 'bot')
        await register_message_type(chat_id, sent_message.message_id, 'share_friends','bot')  # –û—Å—Ç–∞–≤–ª—è–µ–º await, —Ç.–∫. —Ñ—É–Ω–∫—Ü–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è
    else:
        print("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: message.answer –≤–µ—Ä–Ω—É–ª None")

    # –£–¥–∞–ª—è–µ–º –Ω–µ–≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    await delete_unimportant_messages(chat_id, bot)

    # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    try:
        await bot.delete_message(chat_id, message.message_id)
    except Exception as e:
        print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.message_id}: {e}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫—É "share_friend"
@router.callback_query(lambda callback_query: callback_query.data == "share_friend")
async def cmd_share_callback(callback_query: types.CallbackQuery):

    user_id = callback_query.from_user.id
    bot = callback_query.bot
    chat_id = callback_query.from_user.id  # –ü–æ–ª—É—á–∞–µ–º chat_id —á–µ—Ä–µ–∑ from_user.id –¥–ª—è callback_query
    share_message = (
        f"–¢–≤–æ–π –¥—Ä—É–≥ —Ç–æ–∂–µ –∑–∞—Å–ª—É–∂–∏–≤–∞–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç! \n"
        f"\n–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –¥–ª—è –¥—Ä—É–≥–∞: {chat_id} "
        f"\n–ü–µ—Ä–µ—à–ª–∏ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø–æ–º–æ–≥–∏ –µ–º—É –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –Ω–∞—à–µ–º—É VPN-—Å–µ—Ä–≤–∏—Å—É. üåêüîíüöÄ"
        f"\n14 –¥–Ω–µ–π –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –¥—Ä—É–≥—É –∏ 3 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –¥–Ω—è —Ç–µ–±–µ "

    )
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
    referral_link = f"https://t.me/{name_bot}?start={user_id}"

    # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫—É —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π
    share_link_button = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å –¥—Ä—É–≥–æ–º", url=referral_link)]
        ]
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
    sent_message = await bot.send_message(chat_id, share_message, reply_markup=share_link_button, parse_mode="Markdown")

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤ –±—É–¥—É—â–µ–º
    if sent_message:
        await store_message(chat_id, sent_message.message_id, share_message, 'bot')
        await register_message_type(chat_id, sent_message.message_id, 'share_friends', 'bot')

    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏
    await callback_query.answer()
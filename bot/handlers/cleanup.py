# bot/handlers/cleanup.py

import os
from datetime import datetime

from aiogram import types

from data.text_messages import REGISTERED_USERS_DIR

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –∏—Ö —Ç–∏–ø–æ–≤
user_messages = {}
important_messages = {}
# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
messages_for_db = []  # –°–ø–∏—Å–æ–∫ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –ø–æ –º–µ—Ä–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏

async def store_message(chat_id: int, message_id: int, message_text: str, sender_type: str):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç ID —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –µ–≥–æ —Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–∞—Ç–∞, –∞ —Ç–∞–∫–∂–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, –∫—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ.

    :param chat_id: ID —á–∞—Ç–∞
    :param message_id: ID —Å–æ–æ–±—â–µ–Ω–∏—è
    :param message_text: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    :param sender_type: –¢–∏–ø –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è ('user' –∏–ª–∏ 'bot')
    """
    await log_chat_history(chat_id,message_text,sender_type)
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ø–∞–º—è—Ç–∏
    if chat_id not in user_messages:
        user_messages[chat_id] = []

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –∫–æ—Ä—Ç–µ–∂ (message_id, message_text, sender_type)
    user_messages[chat_id].append((message_id, message_text, sender_type))

    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ–±—â–µ–Ω–∏–∏ –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    messages_for_db.append({
        'chat_id': chat_id,
        'message_id': message_id,
        'message_text': message_text,
        'sender_type': sender_type
    })

    # –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å (–∏–ª–∏ –¥—Ä—É–≥–æ–π –ª–æ–≥–≥–µ—Ä), —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å, —á—Ç–æ –±—ã–ª–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ
    print(f"Stored message: {message_text} (ID: {message_id}, Sender: {sender_type})")

async def store_important_message(chat_id: int, message_id: int, message: types.Message = None,):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç ID –≤–∞–∂–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–∞—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤.
    """
    await log_chat_history(chat_id, message.text, "bot")
    if chat_id not in important_messages:
        important_messages[chat_id] = set()  # –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–æ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤

    # –ö—Ä–∏—Ç–µ—Ä–∏–∏ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤–∞–∂–Ω–æ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    if message and message.message_id not in important_messages[chat_id]:

        # –°–æ–æ–±—â–µ–Ω–∏—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ —Ñ–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        if message.document or message.photo:

            important_messages[chat_id].add(message_id)
        # –°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è (–ø—Ä–æ–≤–µ—Ä—è–µ–º —á–∞—Å—Ç—å —Å—Ç—Ä–æ–∫–∏)
        elif "üëã –í—Å–µ–º –ø—Ä–∏–≤–µ—Ç!" in message.text:

            important_messages[chat_id].add(message_id)
        # –°–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π (–ø—Ä–æ–≤–µ—Ä—è–µ–º —á–∞—Å—Ç—å —Å—Ç—Ä–æ–∫–∏ –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ)
        elif "–¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!" in message.text.lower() or "–æ–≥–æ, –≤—ã —É–∂–µ –≤ –∏–≥—Ä–µ!" in message.text.lower():
            important_messages[chat_id].add(message_id)

        elif "/start" in message.text in message.text.lower():
            important_messages[chat_id].add(message_id)

    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ, –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –∫–∞–∫ –≤–∞–∂–Ω–æ–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    # important_messages[chat_id].add(message_id)

# bot/handlers/cleanup.py

async def delete_unimportant_messages(chat_id: int, bot):
    """
    –£–¥–∞–ª—è–µ—Ç –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ, –∫—Ä–æ–º–µ –≤–∞–∂–Ω—ã—Ö.
    """
    if chat_id not in important_messages:
        important_messages[chat_id] = set()

    if chat_id not in user_messages:
        # –ï—Å–ª–∏ –Ω–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–∞–Ω–Ω–æ–º —á–∞—Ç–µ, –ø—Ä–æ—Å—Ç–æ –≤—ã—Ö–æ–¥–∏–º
        return

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    messages_to_delete = [
        message_id for message_id, _, _ in user_messages[chat_id][:-2]
        if message_id not in important_messages[chat_id]
    ]

    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
    for message_id in messages_to_delete:
        try:
            await bot.delete_message(chat_id, message_id)
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {message_id}: {e}")

    # –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–≤–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ user_messages
    user_messages[chat_id] = user_messages[chat_id][-2:]


async def log_chat_history(chat_id: int, message_text:str,sender_type:str):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å –∏–º–µ–Ω–µ–º, –Ω–∞—á–∏–Ω–∞—é—â–∏–º—Å—è —Å chat_id
    user_dirs = [d for d in os.listdir(REGISTERED_USERS_DIR) if d.startswith(str(chat_id))]

    if not user_dirs:
        print(f"–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è chat_id {chat_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–æ–æ–±—â–µ–Ω–∏–µ // {message_text} // –Ω–µ –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ.")
        return  # –ï—Å–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—É—é –Ω–∞–π–¥–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é chat_id
    user_dir = os.path.join(REGISTERED_USERS_DIR, user_dirs[0])

    # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –ª–æ–≥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
    log_file_path = os.path.join(user_dir, "chat_log.txt")

    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –∑–∞–ø–∏—Å–∏
    timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
    if sender_type == 'user':
        log_entry = f"{timestamp} User: {message_text}\n"
    else:
        log_entry = f"{timestamp} Bot: {message_text}\n"

    # –ó–∞–ø–∏—Å—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    with open(log_file_path, 'a', encoding='utf-8') as log_file:
        log_file.write(log_entry)


async def clear_chat_history(chat_id: int, bot):
    """
    –û—á–∏—â–∞–µ—Ç –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞, —É–¥–∞–ª—è—è –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è.
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ chat_id –≤ user_messages –∏ important_messages
    if chat_id not in user_messages:
        user_messages[chat_id] = []  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫, –µ—Å–ª–∏ chat_id –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
    if chat_id not in important_messages:
        important_messages[chat_id] = set()  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—É—Å—Ç–æ–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ, –µ—Å–ª–∏ chat_id –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å
    messages_to_delete = [message_id for message_id, _, _ in user_messages[chat_id]] + list(important_messages[chat_id])

    # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    for message_id in messages_to_delete:
        try:
            await bot.delete_message(chat_id, message_id)
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {message_id}: {e}")

    # –û—á–∏—â–∞–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —á–∞—Ç–∞
    user_messages[chat_id].clear()
    important_messages[chat_id].clear()  # –¢–∞–∫–∂–µ –æ—á–∏—â–∞–µ–º –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    messages_for_db.clear()  # –û—á–∏—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
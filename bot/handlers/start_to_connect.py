# bot/handlers/show_qr.py
from aiogram import Router, types
from aiogram.filters import Command

from bot.handlers.cleanup import store_message, delete_unimportant_messages, store_important_message
from bot.keyboards.inline import device_choice_keyboard
import os

router = Router()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è üöÄ"
@router.message(lambda message: message.text == "–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è üöÄ")
async def handle_connect(message: types.Message):
    # –¢–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    welcome_text = "–í—ã–±–µ—Ä–∏—Ç–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ VPN."

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –≤—ã–±–æ—Ä–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    sent_message = await message.answer(welcome_text, reply_markup=device_choice_keyboard())

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –≤–∞–∂–Ω–æ–µ
    await store_important_message(message.bot, message.chat.id, sent_message.message_id, sent_message)




# @router.message(Command("show"))
# @router.message(lambda message: message.text == "–ü–æ–∫–∞–∑–∞—Ç—å QR –∏ —Ñ–∞–π–ª")
# async def cmd_show_qr_and_file(message: types.Message):
#     # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
#     await store_message(message.chat.id, message.message_id, message.text, 'user')
#
#     # –ü–æ–ª—É—á–∞–µ–º ID —á–∞—Ç–∞ –∏ –Ω–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
#     chat_id = message.chat.id
#     username = message.from_user.username or "unknown"
#
#     # –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –∫–∞–∫ "id —á–∞—Ç–∞_–Ω–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
#     folder_name = f"{chat_id}_{username}"
#
#     # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
#     await send_files_to_user(message, folder_name, use_existing=False)





    # await store_message(message.chat.id, message.message_id, message.text, 'user')
    #
    # chat_id = message.chat.id
    # bot = message.bot
    #
    # # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    # user_data = await get_user_by_telegram_id(message.from_user.id)
    #
    # if user_data:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
    #     nickname = user_data[3] if user_data[3] else "unknown"  # –ù–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ "unknown", –µ—Å–ª–∏ –Ω–∏–∫–Ω–µ–π–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
    #     folder_name = f"{chat_id}_{nickname}"  # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è –ø–∞–ø–∫–∏
    #
    #     try:
    #         # **–î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è**
    #         if not check_existing_user_files(chat_id):
    #             # –ï—Å–ª–∏ –ø–∞–ø–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –≤ –Ω–µ–π –Ω–µ—Ç –Ω—É–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤, —Å–æ–∑–¥–∞–µ–º –∏—Ö
    #             await send_files_to_user(message, folder_name, use_existing=False)
    #
    #         # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    #         config_file, qr_code_file = await process_user_files(folder_name)
    #
    #         # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º QR-–∫–æ–¥
    #         sent_qr_code = await message.answer_photo(photo=qr_code_file)
    #         await store_important_message(sent_qr_code.chat.id, sent_qr_code.message_id)
    #
    #         # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª
    #         sent_config_file = await message.answer_document(document=config_file)
    #         await store_important_message(sent_config_file.chat.id, sent_config_file.message_id)
    #
    #         # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é —Å –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–æ–π
    #         sent_instruction = await message.answer(
    #             f"üëã –í—Å–µ–º –ø—Ä–∏–≤–µ—Ç! –£—Å–ø–µ—Ö –Ω–∞ –Ω–∞—à–µ–π —Å—Ç–æ—Ä–æ–Ω–µ!\n\n{instructions_message}",
    #             parse_mode="Markdown",
    #             disable_web_page_preview=True,
    #             reply_markup=inline_kb
    #         )
    #         await store_important_message(sent_instruction.chat.id, sent_instruction.message_id)
    #
    #     except Exception as e:
    #         error_message = await message.answer(f"–û—à–∏–±–∫–∞: {str(e)}")
    #         await store_message(error_message.chat.id, error_message.message_id, error_message.text, 'bot')
    #
    #     # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    #     await delete_unimportant_messages(chat_id, bot)
    #
    # else:
    #     # –°–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ
    #     error_message = await message.answer("–í—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, –Ω–∞–∂–∞–≤ /start.")
    #     await store_message(error_message.chat.id, error_message.message_id, error_message.text, 'bot')
import logging
import os

import aiosqlite
from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.types import CallbackQuery
from dotenv import load_dotenv

from bot.handlers.admin import send_admin_log, get_admin_reply_keyboard,ADMIN_CHAT_IDS
from bot.handlers.cleanup import register_message_type
from bot.keyboards.inline import accept_agreement_keyboard, device_choice_keyboard
from bot.keyboards.reply import reply_keyboard_main_menu
from bot.utils.cache import send_cached_photo
from models.UserCl import UserCl
from models.referral_class.ReferralCL import ReferralCl  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –∫–ª–∞—Å—Å ReferralCl
router = Router()

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞ .env
load_dotenv()
PATH_TO_IMAGES = os.getenv('PATH_TO_IMAGES')
REGISTERED_USERS_DIR = os.getenv('REGISTERED_USERS_DIR')
connect_text_messages1 = (

    "üåê –£–∑–Ω–∞–π—Ç–µ, —á—Ç–æ —Ç–∞–∫–æ–µ –Ω–∞—Å—Ç–æ—è—â–µ–µ VPN –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ\n\n"
    "üöÄ –í–∞—à–∞ —Å–∫–æ—Ä–æ—Å—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞ —Ç–æ–ª—å–∫–æ –≤–∞—à–∏–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–º!\n\n "

    "üîê –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –∑–∞—â–∏—Ç—É –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö \n\n"

    "üì± *–í—ã–±–µ—Ä–∏—Ç–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ VPN*"
)
# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–∞–ø–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
if not REGISTERED_USERS_DIR:
    logging.error("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å—Ä–µ–¥—ã REGISTERED_USERS_DIR –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–∞–ø–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
def get_user_directory(chat_id, user_login):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if not os.path.isdir(REGISTERED_USERS_DIR):
        logging.error("–ö–æ—Ä–Ω–µ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return None

    matching_dirs = [d for d in os.listdir(REGISTERED_USERS_DIR) if str(chat_id) in d]
    if matching_dirs:
        user_dir = os.path.join(REGISTERED_USERS_DIR, matching_dirs[0])
    else:
        folder_name = f"{chat_id}_{user_login}" if user_login else str(chat_id)
        user_dir = os.path.join(REGISTERED_USERS_DIR, folder_name)
        try:
            os.makedirs(user_dir, exist_ok=True)
            logging.info(f"–°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id} —Å –∏–º–µ–Ω–µ–º {user_login or chat_id}")
        except OSError as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–∞–ø–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}: {e}")
            return None
    return user_dir

async def check_user_agreement(chat_id):
    """ –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø—Ä–∏–Ω—è–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ. """
    async with aiosqlite.connect(os.getenv('database_path_local')) as db:
        async with db.execute("SELECT has_accepted_agreement FROM users WHERE chat_id = ?", (chat_id,)) as cursor:
            row = await cursor.fetchone()
            return row[0] if row else False  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ, —Å—á–∏—Ç–∞–µ–º, —á—Ç–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ –Ω–µ –ø—Ä–∏–Ω—è—Ç–æ


async def request_user_agreement(bot, chat_id):
    """ –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–∏–Ω—è—Ç–∏–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è. """
    welcome_text = (
        "üåê –£–∑–Ω–∞–π—Ç–µ, —á—Ç–æ —Ç–∞–∫–æ–µ –Ω–∞—Å—Ç–æ—è—â–µ–µ VPN –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ\n\n"
        "üöÄ –í–∞—à–∞ —Å–∫–æ—Ä–æ—Å—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞ —Ç–æ–ª—å–∫–æ –≤–∞—à–∏–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–º!\n\n"
        "üîê –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –∑–∞—â–∏—Ç—É –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö\n\n"
        "‚ö†Ô∏è *–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ.*\n\n"
        "üìú [–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ](https://telegra.ph/Polzovatelskoe-soglashenie-03-07-7)"
    )

    await bot.send_message(
        chat_id,
        welcome_text,
        reply_markup=accept_agreement_keyboard(),
        parse_mode="Markdown",
        disable_web_page_preview=True
    )

@router.message(Command("start"))
async def cmd_start(message: types.Message):
    bot = message.bot
    chat_id = message.chat.id
    user = await bot.get_chat(chat_id)
    user_name_full = f"{user.first_name} {user.last_name or ''}".strip()
    user_login = message.from_user.username or None
    args = message.text.split()[1] if len(message.text.split()) > 1 else None
    referral_old_chat_id = int(args) if args else None

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –∏ –¥–æ–±–∞–≤–ª—è–µ–º, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    user = await UserCl.load_user(chat_id)
    if not user:
        logging.info("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        try:
            await UserCl.add_user_to_database(chat_id, user_name_full, user_login, referral_old_chat_id)
            # –°–æ–∑–¥–∞–Ω–∏–µ –∏–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—É—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_dir = get_user_directory(chat_id, user_login)
        except Exception as e:
            await send_admin_log(bot, f"–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}: {e}")

        # –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π ID, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ ReferralCl
        if referral_old_chat_id:
            try:
                await ReferralCl.handle_referral(chat_id, referral_old_chat_id, bot)
                await send_admin_log(bot,
                                     f"–î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{user_login}: ID —á–∞—Ç–∞: {chat_id} —Å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–º {referral_old_chat_id}")
            except Exception as e:
                logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ—Ñ–µ—Ä–∞–ª–∞: {e}")
        else:
            await send_admin_log(bot,
                                 f"–î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{user_login}: ID —á–∞—Ç–∞: {chat_id}")

    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
    welcome_text = (
        "üåê –£–∑–Ω–∞–π—Ç–µ, —á—Ç–æ —Ç–∞–∫–æ–µ –Ω–∞—Å—Ç–æ—è—â–µ–µ VPN –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ\n\n"
        "üöÄ –í–∞—à–∞ —Å–∫–æ—Ä–æ—Å—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞ —Ç–æ–ª—å–∫–æ –≤–∞—à–∏–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–º!\n\n"
        "üîê –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –∑–∞—â–∏—Ç—É –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö\n\n"
        "‚ö†Ô∏è *–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ.*\n\n"
        "üìú [–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ](https://telegra.ph/Polzovatelskoe-soglashenie-03-07-7)"
    )

    await send_cached_photo(message)
    reply_markup = get_admin_reply_keyboard() if chat_id in ADMIN_CHAT_IDS else reply_keyboard_main_menu

    await message.answer(
        "üßä –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å üöÄ\n\n"
        "ü•∂ –ú—ã *–∫–∞—Ä–¥–∏–Ω–∞–ª—å–Ω–æ* –≤—ã–¥–µ–ª—è–µ–º—Å—è, –ø–æ—Ç–æ–º—É —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—ã –≤ *–ê–Ω—Ç–∞—Ä–∫—Ç–∏–¥–µ*\n\n"
        "üßä –ò –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º *–Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—É—é* —Å–∫–æ—Ä–æ—Å—Ç—å –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å!",
        parse_mode="Markdown",
        reply_markup=reply_markup
    )
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∏–Ω—è–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ
    has_accepted = await check_user_agreement(chat_id)
    if not has_accepted:
        await request_user_agreement(bot, chat_id)
    else:
        sent_message = await message.answer(connect_text_messages1, reply_markup=device_choice_keyboard(),
                                                       parse_mode="Markdown")
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–∏–ø–∞ "start"
    #await register_message_type(chat_id, sent_message.message_id, "start", bot)
@router.callback_query(F.data == "accept_agreement")
async def accept_agreement(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ü—Ä–∏–Ω—è—Ç—å —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ'."""
    chat_id = callback.from_user.id

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–Ω—è—Ç–∏—è —Å–æ–≥–ª–∞—à–µ–Ω–∏—è
    async with aiosqlite.connect(os.getenv('database_path_local')) as db:
        await db.execute("UPDATE users SET has_accepted_agreement = TRUE WHERE chat_id = ?", (chat_id,))
        await db.commit()

    await callback.message.edit_text("‚úÖ –í—ã –ø—Ä–∏–Ω—è–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ. –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è.")
    sent_message = await callback.message.answer(connect_text_messages1, reply_markup=device_choice_keyboard(),
                                                       parse_mode="Markdown")
    await callback.answer()

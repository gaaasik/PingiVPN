from aiogram import Router, types
from aiogram.filters import Command

from bot.handlers.admin import ADMIN_CHAT_IDS
from bot.handlers.cleanup import delete_unimportant_messages, store_message, register_message_type, \
    delete_message_with_type
from bot.keyboards.inline import create_payment_button
from bot.database.db import get_user_registration_date_and_username, get_days_since_registration_db

#from bot.utils.file_sender import count_files_in_directory

router = Router()
# @router.message(Command("status"))
# @router.message(lambda message: message.text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ ‚ÑπÔ∏è")
# async def cmd_status(message: types.Message):
#     user_id = message.from_user.id
#     bot = message.bot
#     chat_id = message.chat.id
#
#
#     # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
#     await store_message(chat_id, message.message_id, message.text, 'user')
#
#     # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
#     user_data = await get_user_registration_date_and_username(user_id)  # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –∏ –¥–∞—Ç—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
#     if user_data and len(user_data) == 4:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–æ 4 —ç–ª–µ–º–µ–Ω—Ç–∞
#         registration_date, days_since_registration, user_name, subscription_status = user_data
#
#         # –ö–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–æ–π –æ–ø–ª–∞—Ç—ã
#         if subscription_status == "waiting_pending":
#             status_sub_txt = f"–û–∂–∏–¥–∞–Ω–∏–µ –æ–ø–ª–∞—Ç—ã –ø–æ–¥–ø–∏—Å–∫–∏"
#             # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –æ–ø–ª–∞—Ç—ã
#             keyboard = create_payment_button(chat_id)
#
#         elif subscription_status == 'new_user' :
#             status_sub_txt = f"–ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥"
#             keyboard = create_payment_button(chat_id)
#
#
#         elif subscription_status == 'active' :
#             status_sub_txt = f'–ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞'
#             keyboard = create_payment_button(chat_id)
#         else:
#             status_sub_txt = subscription_status
#             keyboard = create_payment_button(chat_id)
#
#             # –ü—Ä–∏–º–µ—Ä —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
#         status_message = (
#             f"üïí –í—ã —Å –Ω–∞–º–∏ —É–∂–µ {(str(days_since_registration))} –¥–Ω–µ–π! üöÄ –ö–∞–∫–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å! üòé\n"
#             f"–î–µ–π—Å—Ç–≤–∏–µ —Ç–∞—Ä–∏—Ñ–∞: {(days_since_registration)} –¥–Ω–µ–π \n"
#             f"–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {(user_name)}\n"
#             f"–°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏: *{(status_sub_txt)}*"
#         )
# ############################################################################
#         # –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ç–æ–π –∂–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
#         for msg in messages_for_db:
#             if msg['chat_id'] == chat_id and msg['message_text'] == status_message:
#                 try:
#                     await bot.delete_message(chat_id, msg['message_id'])
#                 except Exception as e:
#                     print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {msg['message_id']}: {e}")
#
#         # –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ –∏ –∫–Ω–æ–ø–∫–æ–π –æ–ø–ª–∞—Ç—ã, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
#         sent_message = await message.answer(status_message, parse_mode="Markdown", reply_markup=keyboard)
#
#
#         if sent_message and sent_message.message_id:
#             # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –≤ —Å–ª—É—á–∞–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
#             await store_message(chat_id, sent_message.message_id, status_message, 'bot')
#             await register_message_type(chat_id, sent_message.message_id, 'account_status', 'bot')
#         else:
#             print("–û—à–∏–±–∫–∞: —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–ª–∏ –Ω–µ—Ç message_id")
#
#     else:
#         # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è, –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
#         error_message = "–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É, –º—ã –Ω–∞ —Å–≤—è–∑–∏."
#         sent_message = await message.answer(error_message)
#
#         if sent_message and sent_message.message_id:
#             await store_message(chat_id, sent_message.message_id, error_message, 'bot')
#         else:
#             print("–û—à–∏–±–∫–∞: —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–ª–∏ –Ω–µ—Ç message_id")
#
#     # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
#     try:
#         await bot.delete_message(chat_id, message.message_id)
#     except Exception as e:
#         print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.message_id}: {e}")
#
#     # –£–¥–∞–ª—è–µ–º –Ω–µ–≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
#     await delete_unimportant_messages(chat_id, bot)# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
#

@router.message(Command("status"))
@router.message(lambda message: message.text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ ‚ÑπÔ∏è")
async def cmd_status(message: types.Message):
    user_id = message.from_user.id
    bot = message.bot
    chat_id = message.chat.id

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
    await store_message(chat_id, message.message_id, message.text, 'user')

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é generate_status_message –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.
    status_message, keyboard = await generate_status_message(user_id)

    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å—Ç–∞—Ç—É—Å–µ.
    await delete_message_with_type(chat_id, 'account_status', bot)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ –∏ –∫–Ω–æ–ø–∫–æ–π –æ–ø–ª–∞—Ç—ã, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å.
    sent_message = await message.answer(status_message, parse_mode="Markdown", reply_markup=keyboard)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–∞–∑–µ, –µ—Å–ª–∏ –æ–Ω–æ –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.
    if sent_message and sent_message.message_id:
        await store_message(chat_id, sent_message.message_id, status_message, 'bot')
        await register_message_type(chat_id, sent_message.message_id, 'account_status', bot)


        # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏.
    try:
        await bot.delete_message(chat_id, message.message_id)
    except Exception as e:
        print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.message_id}: {e}")

    # –£–¥–∞–ª—è–µ–º –Ω–µ–≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.
    await delete_unimportant_messages(chat_id, bot)



async def generate_status_message(chat_id: int) -> tuple:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Å—Ç–∞—Ç—É—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - user_id: –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ).
    - chat_id: –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞ (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ).
    - bot: –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å Telegram API.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
    - status_message: —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.
    - keyboard: –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –æ–ø–ª–∞—Ç—ã, –µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ.
    """
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
    user_data = await get_user_registration_date_and_username(chat_id)

    str_count_days = "0"
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –∏ —Å–æ–¥–µ—Ä–∂–∞—Ç 4 —ç–ª–µ–º–µ–Ω—Ç–∞.
    if user_data and len(user_data) == 4:
        # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        registration_date, days_since_registration, user_name, subscription_status = user_data
        days = await get_days_since_registration_db(chat_id)

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –∏ —Å–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞.
        if subscription_status == "waiting_pending":
            str_count_days = "–ø–æ–¥–ø–∏—Å–∫–∞ –∑–∞–∫–æ–Ω—á–µ–Ω–∞"
            status_sub_txt = "–ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è"
            #status_sub_txt = "–û–∂–∏–¥–∞–Ω–∏–µ –æ–ø–ª–∞—Ç—ã –ø–æ–¥–ø–∏—Å–∫–∏"
            keyboard = create_payment_button(chat_id)
        elif subscription_status == "new_user":
            #str_count_days = count_day_free_user_db(chat_id)


            if 14 - days < 0:
                str_count_days = 0
            else:
                str_count_days = 14 - days
            status_sub_txt = "–ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥"
            keyboard = create_payment_button(chat_id)
        elif subscription_status == "active":
            str_count_days = "–∞–∫—Ç–∏–≤–Ω–∞ –Ω–∞ –º–µ—Å—è—Ü"
            status_sub_txt = "–ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –Ω–∞ –º–µ—Å—è—Ü"

            keyboard = create_payment_button(chat_id)

        else:
            # –î–ª—è –ª—é–±–æ–≥–æ –¥—Ä—É–≥–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –Ω–∞–ø—Ä—è–º—É—é.
            status_sub_txt = subscription_status
            keyboard = create_payment_button(chat_id)

        if user_name == None:
            user_name = chat_id
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Å—Ç–∞—Ç—É—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        status_message = (
            f"üïí –í—ã —Å –Ω–∞–º–∏ —É–∂–µ {days} –¥–Ω–µ–π! üöÄ –ö–∞–∫–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å! üòé\n"
            f"–î–µ–π—Å—Ç–≤–∏–µ —Ç–∞—Ä–∏—Ñ–∞: {str_count_days}\n"
            f"–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_name}\n"
            f"–°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏: *{status_sub_txt}*"
        )
    else:
        # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.
        status_message = "–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É, –º—ã –Ω–∞ —Å–≤—è–∑–∏."
        keyboard = None  # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.

    if chat_id not in ADMIN_CHAT_IDS:
        keyboard = None
    return status_message, keyboard

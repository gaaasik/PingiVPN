# –≠—Ç–æ —Ñ–∞–π–ª handlers/file_or_qr.py
import os

from aiogram import Router
from aiogram.types import CallbackQuery, InlineKeyboardMarkup
from dotenv import load_dotenv

from bot.handlers.cleanup import store_important_message
from bot.keyboards.inline import subscribe_keyboard, get_detailed_instruction_button, get_file_button, \
    get_qr_code_button
from bot.utils.file_sender import send_config_file, send_qr_code, send_instruction_video
from bot.utils.subscription_check import check_subscription_channel

router = Router()
load_dotenv()
REGISTERED_USERS_DIR = os.getenv("REGISTERED_USERS_DIR")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
@router.callback_query(lambda c: c.data == "get_config")
async def handle_get_file(callback_query: CallbackQuery):
    chat_id = callback_query.message.chat.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if not await check_subscription_channel(chat_id, callback_query.bot):
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –∫–∞–Ω–∞–ª" –∏ "–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è"
        message = await callback_query.message.answer(
            "VPN —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ —Ä–µ–∫–ª–∞–º—ã. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è ‚Äî –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª PingiVPN.",
            reply_markup=subscribe_keyboard()
        )
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –≤–∞–∂–Ω–æ–µ
        await store_important_message(callback_query.bot, chat_id, message.message_id, message, "subscription_check")
        return

    await send_instruction_video(callback_query)
    # –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
    await send_config_file(callback_query)
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞ —Å –¥–≤—É–º—è –∫–Ω–æ–ø–∫–∞–º–∏: "–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è" –∏ "–ü–æ–∫–∞–∑–∞—Ç—å QR-–∫–æ–¥"
    await callback_query.message.answer(
        "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ WireGuard üìÇ",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [get_detailed_instruction_button()],
            [get_qr_code_button()]
        ])
    )

    await callback_query.answer()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è QR-–∫–æ–¥–∞
def detailed_instruction_button():
    pass


@router.callback_query(lambda c: c.data == "get_qr_code")
async def handle_get_qr_code(callback_query: CallbackQuery):
    chat_id = callback_query.message.chat.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if not await check_subscription_channel(chat_id, callback_query.bot):
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –∫–∞–Ω–∞–ª" –∏ "–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è"
        message = await callback_query.message.answer(
            "VPN —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ —Ä–µ–∫–ª–∞–º—ã. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è ‚Äî –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª PingiVPN.",
            reply_markup=subscribe_keyboard()
        )
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –≤–∞–∂–Ω–æ–µ
        await store_important_message(callback_query.bot, chat_id, message.message_id, message, "subscription_check")
        return

    # –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º QR-–∫–æ–¥
    await send_qr_code(callback_query)
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ QR-–∫–æ–¥–∞ —Å –¥–≤—É–º—è –∫–Ω–æ–ø–∫–∞–º–∏: "–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è" –∏ "–ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª"
    await callback_query.message.answer(
        "–û—Ç–∫—Ä–æ–π—Ç–µ QR-–∫–æ–¥ –Ω–∞ –¥—Ä—É–≥–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ –∏ –æ—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ –µ–≥–æ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ üì±",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [get_detailed_instruction_button()],
            [get_file_button()]
        ])
    )

    await callback_query.answer()


# async def handle_get_file(callback_query: CallbackQuery):
#     chat_id = callback_query.message.chat.id
#
#     # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
#     if not await check_subscription_channel(chat_id, callback_query.bot):
#         # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –∫–∞–Ω–∞–ª" –∏ "–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è"
#         message = await callback_query.message.answer(
#             "VPN —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ —Ä–µ–∫–ª–∞–º—ã. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è ‚Äî –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª PingiVPN.",
#             reply_markup=subscribe_keyboard()
#         )
#         # –°–æ—Ö—Ä–∞–Ω—è–µ–º —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –≤–∞–∂–Ω–æ–µ
#         await store_important_message(callback_query.bot, chat_id, message.message_id, message, "subscription_check")
#         return
#
#     # –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
#     await send_config_file(callback_query)
#
#     await callback_query.answer()

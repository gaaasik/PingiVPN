
from aiogram import types, Bot, Router
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
import asyncio
import logging

from bot.keyboards.inline import main_menu_inline_keyboard
from bot.handlers.all_menu.main_menu import show_main_menu
from bot.keyboards.reply import reply_keyboard_main_menu

logger = logging.getLogger(__name__)
router = Router()
# –û—Å–Ω–æ–≤–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
async def send_initial_update_notification(chat_id: int, bot: Bot):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–µ—Ä–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π.
    """
    try:
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        text = (
            "üö® *–£ –Ω–∞—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ!* üö®\n\n"
            "–¢–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–æ–≤—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª *VLESS* —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏ —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ –∑–∞—â–∏—Ç—ã.\n\n"
            "‚öôÔ∏è *–í—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å*\n"
            "üõ°Ô∏è *–ó–∞—â–∏—Ç–∞ –∏ –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å*\n"
            "üìà *–°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å*\n"
            "üì≤ –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –Ω–∞ –Ω–æ–≤—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —É–¥–æ–±—Å—Ç–≤–∞ –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏!"
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        await bot.send_message(chat_id=chat_id, text=text, reply_markup=reply_keyboard_main_menu, parse_mode="Markdown")
        logger.info(f"–û—Å–Ω–æ–≤–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")


# –í—Ç–æ—Ä–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å inline-–∫–Ω–æ–ø–∫–∞–º–∏
async def send_choice_notification(chat_id: int, bot: Bot):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Ç–æ—Ä–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å inline-–∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è.
    """
    try:
        # –¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å –≤—ã–±–æ—Ä–æ–º –¥–µ–π—Å—Ç–≤–∏—è
        choice_text = (
            f"üö® –£–ª—É—á—à–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –∂–¥–∞–ª–∏!\n\n"
            f"–ú—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é —É—Ö–æ–¥–∏–º –æ—Ç *WireGuard*, —Ç–∞–∫ –∫–∞–∫ –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ, –∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã –∞–∫—Ç–∏–≤–Ω–æ –±–ª–æ–∫–∏—Ä—É—é—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.\n\n"
            f"üì≤ –í–∞–º –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–ª—é—á *VLESS* –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è. –í–∞–º –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω üéÅ *–ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ 7 –¥–Ω–µ–π*.\n\n"
        )

        # –°–æ–∑–¥–∞–µ–º inline-–∫–Ω–æ–ø–∫–∏
        choice_keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="üöÄ –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ VLESS", callback_data="connect_vpn")],
                [InlineKeyboardButton(text="‚ö†Ô∏è –û—Å—Ç–∞—Ç—å—Å—è –Ω–∞ WireGuard", callback_data="stay_on_wg")]
            ]
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å inline-–∫–Ω–æ–ø–∫–∞–º–∏
        await bot.send_message(chat_id=chat_id, text=choice_text, reply_markup=choice_keyboard, parse_mode="Markdown")
        logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å –≤—ã–±–æ—Ä–æ–º: {e}")
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è inline-–∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞
@router.callback_query(lambda c: c.data in ["connect_vpn", "stay_on_wg", "wg_working"])
async def handle_choice_callback(callback_query: types.CallbackQuery):
    bot = callback_query.bot
    chat_id = callback_query.message.chat.id

    if callback_query.data == "connect_vpn":
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª VLESS
        await show_main_menu(chat_id, bot)
        await callback_query.answer("–í—ã –ø–µ—Ä–µ—à–ª–∏ –Ω–∞ VLESS üöÄ", show_alert=True)

    elif callback_query.data == "stay_on_wg":
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–µ—à–∏–ª –æ—Å—Ç–∞—Ç—å—Å—è –Ω–∞ WireGuard
        warning_text = (
            f"‚ö†Ô∏è –û—Å—Ç–∞—Ç—å—Å—è –Ω–∞ WireGuard –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è, –ø—Ä–æ–≤–∞–π–¥–µ—Ä –∞–∫—Ç–∏–≤–Ω–æ –±–ª–æ–∫–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è.\n\n"
            f"–ó–∞—á–µ–º –∂–¥–∞—Ç—å –ø—Ä–æ–±–ª–µ–º?\n–° *VLESS* —É –≤–∞—Å –±—É–¥–µ—Ç –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã VPN."
        )

        # –°–æ–∑–¥–∞–µ–º –≤—Ç–æ—Ä—É—é inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–≤—É–º—è –∫–Ω–æ–ø–∫–∞–º–∏
        second_choice_keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="üöÄ –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ VLESS", callback_data="connect_vpn")],
                [InlineKeyboardButton(text="‚ùì –£ –º–µ–Ω—è –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç", callback_data="wg_working")]
            ]
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∏ –≤—Ç–æ—Ä—É—é inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        await bot.send_message(chat_id=chat_id, text=warning_text, reply_markup=second_choice_keyboard, parse_mode="Markdown")
        await callback_query.answer()

    elif callback_query.data == "wg_working":
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª, —á—Ç–æ WireGuard —Ä–∞–±–æ—Ç–∞–µ—Ç
        final_warning_text = (
            "‚è≥ *–°–∫–æ—Ä–æ –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç...*\n–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ VLESS.\n"
            "–ï—Å–ª–∏ –≤—ã —É–≤–µ—Ä–µ–Ω—ã –≤ WireGuard, –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."
        )

        final_choice_keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="üöÄ –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ VLESS", callback_data="connect_vpn")]
            ]
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
        await bot.send_message(chat_id=chat_id, text=final_warning_text, reply_markup=final_choice_keyboard, parse_mode="Markdown")
        await callback_query.answer()
from aiogram import Router, types, F
from aiogram.types import CallbackQuery, Message, Document
from aiogram.fsm.context import FSMContext
from bot.admin_func.keyboards import get_key_change_keyboard
from bot.admin_func.states import AdminStates
import re

from models.UserCl import UserCl

router = Router()

# –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ VLESS –∫–ª—é—á–∞
VLESS_PATTERN = re.compile(r'vless://[a-f0-9\-]+@[0-9\.]+:\d+\?.*')


@router.callback_query(F.data == "change_to_vless")
async def change_to_vless(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ò–∑–º–µ–Ω–∏—Ç—å –∫–ª—é—á –Ω–∞ VLESS'. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –Ω–æ–≤—ã–π –∫–ª—é—á."""
    await callback.message.edit_text("‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π VLESS –∫–ª—é—á:")
    await state.set_state(AdminStates.waiting_for_vless_key)
    await callback.answer()


@router.callback_query(F.data == "change_to_wireguard")
async def change_to_wireguard(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ò–∑–º–µ–Ω–∏—Ç—å –∫–ª—é—á –Ω–∞ WireGuard'. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏."""
    await callback.message.edit_text("üìÅ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π —Ñ–∞–π–ª WireGuard:")
    await state.set_state(AdminStates.waiting_for_wireguard_file)
    await callback.answer()


@router.message(AdminStates.waiting_for_vless_key)
async def process_vless_key(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ VLESS –∫–ª—é—á–∞."""
    data = await state.get_data()
    us = data.get("current_user")

    key = message.text.strip()

    if not VLESS_PATTERN.match(key):
        await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç VLESS –∫–ª—é—á–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∫–ª—é—á.")
        return

    # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–ª—é—á–∞

    await us.update_key_to_vless(key)
    await message.answer("‚úÖ –ù–æ–≤—ã–π VLESS –∫–ª—é—á —Å–æ—Ö—Ä–∞–Ω–µ–Ω.")
    await state.clear()


@router.message(AdminStates.waiting_for_wireguard_file, F.document)
async def process_wireguard_file(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ WireGuard."""
    data = await state.get_data()
    us = data.get("current_user")
    document: Document = message.document

    if not document.file_name.endswith(".conf"):
        await message.answer("‚ùå –û—à–∏–±–∫–∞: –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ .conf")
        return

    await us.update_key_to_wireguard()


    # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–ª—é—á–∞




    await message.answer("‚úÖ –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ WireGuard –ø–æ–ª—É—á–µ–Ω.")
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–¥ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ

    await state.clear()

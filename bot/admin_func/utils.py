import aiosqlite
import json
import logging
from datetime import datetime
from typing import Optional


async def user_to_json(user, db_path: str) -> dict:
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –µ–≥–æ —Å–µ—Ä–≤–µ—Ä–æ–≤ –≤ JSON."""
    user_data = {
        "chat_id": user.chat_id,
        "user_name": await user.user_name_full.get(),
        "login": await user.user_login.get(),
        "email": await user.email.get(),
        "registration_date": await user.registration_date.get(),
        "referral_old_chat_id": await user.referral_old_chat_id.get(),
        "device": await user.device.get(),
        "is_subscribed_on_channel": await user.is_subscribed_on_channel.get(),
        "days_since_registration": await user.days_since_registration.get(),
        "count_key": await user.count_key.get(),
        "value_key": None  # –ó–¥–µ—Å—å –±—É–¥—É—Ç –¥–∞–Ω–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–æ–≤
    }

    try:
        async with aiosqlite.connect(db_path) as db:
            query = "SELECT value_key FROM users_key WHERE chat_id = ?"
            async with db.execute(query, (user.chat_id,)) as cursor:
                result = await cursor.fetchone()
                if result and result[0]:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ –ø—É—Å—Ç–æ–π
                    try:
                        user_data["value_key"] = json.loads(result[0])
                    except json.JSONDecodeError:
                        logging.error(f"–û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è JSON –¥–ª—è chat_id {user.chat_id}")
                        user_data["value_key"] = []
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ user_to_json: {e}")
        user_data["value_key"] = []

    return user_data


async def format_user_data(user_data: dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –µ–≥–æ —Å–µ—Ä–≤–µ—Ä–æ–≤ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞."""
    if not user_data:
        return "–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã."

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    formatted_data = [
        f"<b>üë§ Chat ID:</b> {user_data.get('chat_id', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}",
        f"<b>üë§ –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b> {user_data.get('user_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}",
        f"<b>üîë –õ–æ–≥–∏–Ω:</b> {user_data.get('login', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}",
        f"<b>üìß Email:</b> {user_data.get('email', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}",
        f"<b>üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</b> {user_data.get('registration_date', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}",
        f"<b>üÜî –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π ID:</b> {user_data.get('referral_old_chat_id', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}",
        f"<b>üì± –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ:</b> {user_data.get('device', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}",
        f"<b>üì¢ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª:</b> {'‚úÖ –î–∞' if user_data.get('is_subscribed_on_channel') else '‚ùå –ù–µ—Ç'}",
        f"<b>üìÜ –î–Ω–∏ —Å –º–æ–º–µ–Ω—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</b> {user_data.get('days_since_registration', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}",
        f"<b>üåê –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ä–≤–µ—Ä–æ–≤:</b> {user_data.get('count_key', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}",
    ]

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–æ–≤
    value_key = user_data.get("value_key", [])
    if isinstance(value_key, list) and value_key:
        for i, server in enumerate(value_key, 1):
            formatted_data.extend([
                f"\n<b>üñ•Ô∏è –°–µ—Ä–≤–µ—Ä {i}:</b>",
                f"  üåç <b>–°—Ç—Ä–∞–Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞:</b> {server.get('country_server', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}",
                f"  üïí <b>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª—é—á–∞ :</b> {server.get('date_creation_key', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}",
                f"  ‚è≥ <b>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è:</b> {server.get('date_key_off', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}",
                f"  üì• <b>–¢—Ä–∞—Ñ–∏–∫ (–∑–∞–≥—Ä—É–∑–∫–∞):</b> {server.get('traffic_down', '0')} MB",
                f"  üì§ <b>–¢—Ä–∞—Ñ–∏–∫ (–æ—Ç–¥–∞—á–∞):</b> {server.get('traffic_up', '0')} MB",
                f"  üíª <b>–ò–º—è —Å–µ—Ä–≤–µ—Ä–∞:</b> {server.get('name_server', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}",
                f"  üõ°Ô∏è <b>–ü—Ä–æ—Ç–æ–∫–æ–ª:</b> {server.get('name_protocol', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}",
                f"  üñ•Ô∏è <b>IP —Å–µ—Ä–≤–µ—Ä–∞:</b> {server.get('server_ip', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}",
                f"  üîë <b>UUID:</b> {server.get('uuid_id', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}",
                f"  ‚öôÔ∏è <b>–°—Ç–∞—Ç—É—Å:</b> {server.get('status_key', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}",
                f"  üü¢ <b>–°—Ç–∞—Ç—É—Å –∞–∫–∫–∞—É–Ω—Ç–∞ :</b> {'‚úÖ –í–∫–ª—é—á–µ–Ω' if server.get('enable') else '‚ùå –í—ã–∫–ª—é—á–µ–Ω'}",
                f"  üí∞ <b>–î–∞—Ç–∞ –æ–ø–ª–∞—Ç—ã –∫–ª—é—á–∞:</b> {server.get('date_payment_key', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}",
                f"  üí≥ <b>–ö–æ–ª-–≤–æ –æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö –∫–ª—é—á–µ–π:</b> {server.get('has_paid_key', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}",
                f"  üìß <b>Email –∫–ª—é—á–∞:</b> {server.get('email_key', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}",
                f"  üåê <b>URL VLESS:</b> {server.get('url_vless', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}",
                f"  üì° <b>IP –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b> {server.get('user_ip', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}",
            ])
    else:
        formatted_data.append("\n<b>üö´ –°–µ—Ä–≤–µ—Ä—ã:</b> –ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Ä–≤–µ—Ä–∞—Ö.")

    return "\n".join(formatted_data)

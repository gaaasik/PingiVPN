import logging

from aiogram import Router, types,F
from aiogram.fsm.context import FSMContext
from datetime import datetime, timedelta
from bot.admin_func.states import AdminStates
from bot.handlers.admin import send_admin_log
from models.UserCl import UserCl

router = Router()

@router.callback_query(F.data == "add_bonus_days")
async def handle_add_bonus_days(callback, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–æ–Ω—É—Å–Ω—ã—Ö –¥–Ω–µ–π."""
    data = await state.get_data()
    user = data.get("current_user")

    if user and user.servers:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –∫–ª—é—á–∞
        active_server = user.servers[0]
        current_date_key_off = await active_server.date_key_off.get()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –±–æ–Ω—É—Å–Ω—ã—Ö –¥–Ω–µ–π
        await callback.message.answer(
            f"–¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è –∫–ª—é—á–∞: {current_date_key_off}\n"
            "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–æ–Ω—É—Å–Ω—ã—Ö –¥–Ω–µ–π, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å, –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–û—Ç–º–µ–Ω–∞'."
        )
        await state.set_state(AdminStates.waiting_for_bonus_days)
    else:
        await callback.message.answer("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∞–∫—Ç–∏–≤–Ω—ã–º —Å–µ—Ä–≤–µ—Ä–æ–º.")
    await callback.answer()


@router.message(AdminStates.waiting_for_bonus_days)
async def process_bonus_days_input(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –±–æ–Ω—É—Å–Ω—ã—Ö –¥–Ω–µ–π."""
    try:
        days_to_add = int(message.text.strip())
        if days_to_add <= 0 or days_to_add > 50:
            await message.answer("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 50.")
            return

        #us = await UserCl.load_user(chat_id)


        data = await state.get_data()
        us = data.get("current_user")
        user = await UserCl.load_user(message.chat.id)

        if not us or not us.servers:
            await message.answer("–û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            await state.clear()
            return

        server = us.active_server

        current_date_key_off_str = await server.date_key_off.get()

        # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –¥–∞—Ç—ã –∏–∑ —Å—Ç—Ä–æ–∫–∏ –≤ datetime
        current_date_key_off = datetime.strptime(current_date_key_off_str, "%d.%m.%Y %H:%M:%S")
        now = datetime.now()

        # –ï—Å–ª–∏ –∫–ª—é—á —É–∂–µ –∏—Å—Ç–µ–∫, –±–µ—Ä–µ–º —Å–µ–≥–æ–¥–Ω—è—à–Ω—é—é –¥–∞—Ç—É –∫–∞–∫ –æ—Å–Ω–æ–≤—É
        if current_date_key_off < now:
            new_date_key_off = now + timedelta(days=days_to_add)
            logging.info(f"–ö–ª—é—á –∏—Å—Ç–µ–∫, –Ω–æ–≤–∞—è –¥–∞—Ç–∞: {new_date_key_off.strftime('%d.%m.%Y %H:%M:%S')}")
        else:
            new_date_key_off = current_date_key_off + timedelta(days=days_to_add)
            logging.info(f"–ö–ª—é—á –∞–∫—Ç–∏–≤–µ–Ω, –Ω–æ–≤–∞—è –¥–∞—Ç–∞: {new_date_key_off.strftime('%d.%m.%Y %H:%M:%S')}")

        formatted_new_date = new_date_key_off.strftime("%d.%m.%Y %H:%M:%S")
        await server.date_key_off.set(formatted_new_date)
#+++++++++++++++++++++++++++++++++++++++++++
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –æ—Ç–∫–ª—é—á–µ–Ω, –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –µ–≥–æ
        if not await server.enable.get():
            await server.enable.set(True)
            logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {us.chat_id} –±—ã–ª –≤—ã–∫–ª—é—á–µ–Ω. –°–µ–π—á–∞—Å –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.")

        # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        await send_admin_log(
            bot=message.bot,
            message=(
                f"‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {message.from_user.full_name} –¥–æ–±–∞–≤–∏–ª {days_to_add} –¥–Ω–µ–π "
                f"–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å Chat ID {us.chat_id}.\n"
                f"üîë –ù–æ–≤–∞—è –¥–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: {formatted_new_date}.\n"
                f"üîò –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω: {await server.enable.get()}"
            )
        )

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        message_text = (
            f"üîπ –í–∞–º –¥–æ–±–∞–≤–ª–µ–Ω–æ {days_to_add} –±–æ–Ω—É—Å–Ω—ã—Ö –¥–Ω–µ–π!\n"
            f"üìÖ –ù–æ–≤–∞—è –¥–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∫–ª—é—á–∞: <b>{formatted_new_date}</b>."
        )

        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∫–ª—é—á–µ–Ω–∏–∏ –¥–æ—Å—Ç—É–ø–∞, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –æ—Ç–∫–ª—é—á–µ–Ω
        if await server.enable.get():
            message_text += "\n‚ö° –í–∞—à –¥–æ—Å—Ç—É–ø –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω."

        # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ –ø—É—Å—Ç–æ–π
        if message_text.strip():
            try:
                await message.bot.send_message(
                    chat_id=us.chat_id,
                    text=message_text,
                    parse_mode="HTML"
                )
            except Exception as e:
                logging.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {us.chat_id}: {e}")
                await send_admin_log(message.bot, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {us.chat_id}")
        else:
            logging.warning(f"–ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {us.chat_id}")

        await state.clear()
    except ValueError:
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ –¥–Ω–µ–π.")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –±–æ–Ω—É—Å–Ω—ã—Ö –¥–Ω–µ–π: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö.")
        await state.clear()
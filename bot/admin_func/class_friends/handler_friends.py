import logging

from aiogram import Router, types
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton

from bot.admin_func.class_friends.FriendsCL import FriendsManager
from bot.admin_func.keyboards import get_user_service_keyboard
from bot.admin_func.states import AdminStates

router = Router()

# üî• –ó–∞–ø—Ä–æ—Å –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ –¥—Ä—É–∑–µ–π
@router.callback_query(lambda c: c.data == "add_to_friends")
async def add_friend_request(callback_query: CallbackQuery, state: FSMContext):
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ –¥—Ä—É–∑–µ–π.
    """
    friend_chat_id = callback_query.message.chat.id  # –ß–∞—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –¥–æ–±–∞–≤–ª—è—é—Ç

    confirm_keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –î–∞, –¥–∞—Ç—å –¥–æ—Å—Ç—É–ø –Ω–∞ –≥–æ–¥", callback_data=f"confirm_add_friend:{friend_chat_id}")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_add_friend")],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="cancel_service")]
    ])

    await callback_query.message.edit_text(
        "‚ö†Ô∏è <b>–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –¥–∞—Ç—å —ç—Ç–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–æ—Å—Ç—É–ø –Ω–∞ –≥–æ–¥?</b>",
        parse_mode="HTML",
        reply_markup=confirm_keyboard
    )
    await state.set_state(AdminStates.waiting_for_friend_confirmation)
    await callback_query.answer()

    @router.callback_query(lambda c: c.data.startswith("confirm_add_friend"))
    async def confirm_add_friend(callback_query: CallbackQuery, state: FSMContext):
        """
        –î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ –¥—Ä—É–∑–µ–π –∏ –ø—Ä–æ–¥–ª–µ–≤–∞–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É.
        """
        try:
            admin_chat_id = callback_query.from_user.id  # –ß–∞—Ç ID –∞–¥–º–∏–Ω–∞, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–±–∞–≤–ª—è–µ—Ç

            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            data = await state.get_data()
            current_user = data.get("current_user")

            if not current_user:
                await callback_query.message.edit_text("‚ùå –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –¥—Ä—É–∑—å—è.")
                await state.clear()
                return

            friend_chat_id = current_user.chat_id  # –¢–µ–ø–µ—Ä—å –º—ã –±–µ—Ä–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π chat_id

            # –ü–æ–ª—É—á–∞–µ–º username –∏–ª–∏ –∏–º—è + —Ñ–∞–º–∏–ª–∏—é
            friend_username = current_user.user_login.value if current_user.user_login.value else current_user.user_name_full.value

            # –î–æ–±–∞–≤–ª—è–µ–º –¥—Ä—É–≥–∞ –≤ —Å–ø–∏—Å–æ–∫
            success = await FriendsManager.add_friend(admin_chat_id, friend_chat_id, friend_username)

            if success:
                text = f"‚úÖ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {friend_username} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∏–ª 365 –¥–Ω–µ–π –¥–æ—Å—Ç—É–ø–∞!</b>"
                logging.info(f"‚úÖ –ê–¥–º–∏–Ω {admin_chat_id} –¥–æ–±–∞–≤–∏–ª –¥—Ä—É–≥–∞: {friend_chat_id} ({friend_username})")
            else:
                text = f"‚ö†Ô∏è <b>{friend_username} —É–∂–µ –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ –¥—Ä—É–∑–µ–π.</b>"
                logging.warning(
                    f"‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è {friend_chat_id} ({friend_username}) –≤ —Å–ø–∏—Å–æ–∫ –¥—Ä—É–∑–µ–π.")

            keyboard = await get_user_service_keyboard()

            await callback_query.message.edit_text(text, parse_mode="HTML", reply_markup=keyboard)
            await state.clear()
            await callback_query.answer()

        except Exception as e:
            logging.error(f"‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –¥—Ä—É–≥–∞: {e}")
            await callback_query.message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            await state.clear()


@router.callback_query(lambda c: c.data == "cancel_add_friend")
async def cancel_add_friend(callback_query: CallbackQuery, state: FSMContext):
    """
    –û—Ç–º–µ–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —Å–ø–∏—Å–æ–∫ –¥—Ä—É–∑–µ–π –∏ –≤–æ–∑–≤—Ä–∞—Ç –≤ —Ä–µ–∂–∏–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è.
    """
    keyboard = await get_user_service_keyboard()

    await callback_query.message.edit_text(
        "üö´ <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ –¥—Ä—É–∑–µ–π –æ—Ç–º–µ–Ω–µ–Ω–æ.</b>\n\nüîß –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ —Ä–µ–∂–∏–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è.",
        parse_mode="HTML",
        reply_markup=keyboard
    )
    await state.clear()
    await callback_query.answer()

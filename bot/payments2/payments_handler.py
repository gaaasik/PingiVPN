import os

from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from dotenv import load_dotenv
from yookassa import Configuration, Payment
from aiogram import Router, types

from bot.handlers.admin import send_admin_log

load_dotenv()
WEBHOOK_URL = os.getenv('WEBHOOK_URL')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ API –Æ–∫–∞—Å—Å—ã
Configuration.account_id = os.getenv('SHOPID')# –í–∞—à shopId
Configuration.secret_key = os.getenv('API_KEY')  # –í–∞—à —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á API



router = Router()

@router.callback_query(lambda c: c.data == 'payment_199')
async def process_callback_query(callback_query: types.CallbackQuery):
    chat_id = callback_query.message.chat.id
    user_id = callback_query.message.from_user.id
    bot = callback_query.message.bot
    if chat_id == 456717505:

        # –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç—ë–∂ –∏ –ø–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É
        one_time_id, one_time_link, one_time_payment_method_id = create_one_time_payment(chat_id)

        # –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        text_payment = (
            "–í—ã –ø–æ–¥–∫–ª—é—á–∞–µ—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –Ω–∞—à —Å–µ—Ä–≤–∏—Å —Å –ø–æ–º–æ—â—å—é\n"
            "–ø–ª–∞—Ç—ë–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –Ækassa\n\n"
            "–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ 1 –º–µ—Å—è—Ü: 199—Ä üëáüëáüëá\n"
        )

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π
        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="–û–ø–ª–∞—Ç–∏—Ç—å 199—Ä", url=one_time_link)]
            ]
        )
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        await bot.send_message(
            chat_id=chat_id,
            text=  text_payment,
            reply_markup=keyboard
        )
    else:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        await bot.send_message(
            chat_id=chat_id,
            text="–û–ø–ª–∞—Ç–∞ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞"#,
            #reply_markup=keyboard
        )

        username = callback_query.message.from_user.username
        await send_admin_log(bot,
            message=f"@{username} - –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç–∏—Ç—å, –Ω–æ —É –Ω–µ–≥–æ –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã—à–ª–æ )) ID —á–∞—Ç–∞: {chat_id})")
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º callback_query, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∑–∞–≤–∏—Å–∞–Ω–∏—è
    await callback_query.answer()


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞–∑–æ–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
def create_one_time_payment(user_id):
    payment = Payment.create({
        "amount": {
            "value": "199.00",
            "currency": "RUB"
        },
        "confirmation": {
            "type": "redirect",
            "return_url": WEBHOOK_URL
        },
        "capture": True,
        "description": "–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ Telegram-–±–æ—Ç",
        "metadata": {
            "user_id": user_id
        }
    })
    return payment.id, payment.confirmation.confirmation_url, '0'


